colnames(FC.color)[erlotinib] <- "erlotinib"
geldanamycin <- c(308:364)
colnames(FC.color)[geldanamycin] <- "geldanamycin"
gemcitabine <- c(365:420)
colnames(FC.color)[gemcitabine] <- "gemcitabine"
lapatinib <- c(421:474)
colnames(FC.color)[lapatinib] <- "lapatinib"
paclitaxel <- c(475:533)
colnames(FC.color)[paclitaxel] <- "paclitaxel"
sirolimus <- c(534:589)
colnames(FC.color)[sirolimus] <- "sirolimus"
sorafenib <- c(590:646)
colnames(FC.color)[sorafenib] <- "sorafenib"
sunitinib <- c(647:702)
colnames(FC.color)[sunitinib] <- "sunitinib"
topotecan <- c(703:760)
colnames(FC.color)[topotecan] <- "topotecan"
vorinostat <- c(761:819)
colnames(FC.color)[vorinostat] <- "vorinostat"
#creating color vector
color.aza <- ifelse(colnames(FC.color[,c(1:94)])=="azacytidine", "firebrick", "forestgreen")
color.cis <- ifelse(colnames(FC.color[,c(95:198)])=="cisplatin", "blue","orange")
color.dox <- ifelse(colnames(FC.color[,c(199:307)])=="doxorubicin", "black", "lightblue")
color.gel <- ifelse(colnames(FC.color[,c(308:420)])=="geldanamycin", "pink", "violet")
color.lap <- ifelse(colnames(FC.color[,c(421:533)])=="lapatinib", "grey", "lightgreen")
color.sir<- ifelse(colnames(FC.color[,c(534:646)])=="sirolimus", "darkblue", "gold")
color.sun <- ifelse(colnames(FC.color[,c(647:760)])=="sunitinib", "yellow", "red")
color.vor <- ifelse(colnames(FC.color[,c(761:819)])=="vorinostat", "peru", "silver")
cb <- c(color.aza, color.cis, color.dox, color.gel, color.lap, color.sir, color.sun, color.vor)
#plot colored PCA
plot(PCA.FC$rotation[, 1], PCA.FC$rotation[, 2], col=cb, xlab = "PC1", ylab = "PC2", pch=19)
plot(PCA.FC$rotation[, 3], PCA.FC$rotation[, 4], col=cb, xlab = "PC3", ylab = "PC4", pch=19)
#color tyrosine kinase inhibitor
FC.TKI <- log2FC.treated.untreated
tyrosinKI <- c(dasatinib, sunitinib, lapatinib, sorafenib)
colnames(FC.TKI)[tyrosinKI]<- "Tyrosine Kinase Inhibitor"
color.TKI <- ifelse(colnames(FC.TKI)=="Tyrosine Kinase Inhibitor", "firebrick", "forestgreen")
#plot
plot(PCA.FC$rotation[,1], PCA.FC$rotation[,2], col=color.TKI, xlab="PC1", ylab="PC2", pch=19)
plot(PCA.FC$rotation[,3], PCA.FC$rotation[,4], col=color.TKI, xlab="PC3", ylab="PC4", pch=19)
#Specific Analysis
#Find Biomarker for cisplatin through FC
treated.cisplatin = treated.sclaed[,c(95:149)]
untreated.cisplatin = untreated.scaled[,c(95:149)]
FC.cisplatin = log2(treated.cisplatin/untreated.cisplatin)
is.nan.data.frame.2 <- function(x)      #NaN durch 0 ersetzen
+ do.call(cbind, lapply(x, is.nan))
FC.cisplatin[is.nan(FC.cisplatin)] <- 0
View(treated.scaled)
treated.cisplatin = treated.sclaed[,c(95:149)]
View(treated.scaled)
#Specific Analysis
#Find Biomarker for cisplatin through FC
treated.cisplatin = treated.scaled[,c(95:149)]
untreated.cisplatin = untreated.scaled[,c(95:149)]
FC.cisplatin = log2(treated.cisplatin/untreated.cisplatin)
is.nan.data.frame.2 <- function(x)      #NaN durch 0 ersetzen
+ do.call(cbind, lapply(x, is.nan))
FC.cisplatin[is.nan(FC.cisplatin)] <- 0
View(FC.cisplatin)
rm(FC.test)
FC.cisplatin = t(FC.cisplatin)
View(FC.cisplatin)
as.data.frame(FC.cisplatin)
FC.cisplatin.df = as.data.frame(FC.cisplatin)
View(FC.cisplatin.df)
mean.FC <- colMeans(FC.cisplatin.df, na.rm = TRUE, dims =1)
View(mean.FC)
rm(FC.cisplatin.df)
mean.FC = sort(mean.FC, decreasing = TRUE)
View(mean.FC)
highest.FC = mean.FC[1:10]
View(mean.FC)
highest.FC = mean.FC[,c(1:10)]
highest.FC = mean.FC[c(1:10),]
highest.FC <- mean.FC[c(1:10),]
highest.FC <- mean.FC[1:10]
View(highest.FC)
lowest.FC <- mean.FC[13289:13299]
View(lowest.FC)
lowest.FC <- mean.FC[13290:13299]
View(lowest.FC)
#Specific Analysis
#Find Biomarker for cisplatin through FC
treated.cisplatin = treated.scaled[,c(95:149)]
untreated.cisplatin = untreated.scaled[,c(95:149)]
FC.cisplatin = log2(treated.cisplatin/untreated.cisplatin)
is.nan.data.frame.2 <- function(x)      #NaN durch 0 ersetzen
+ do.call(cbind, lapply(x, is.nan))
FC.cisplatin[is.nan(FC.cisplatin)] <- 0
FC.cisplatin = t(FC.cisplatin)
mean.FC <- colMeans(FC.cisplatin, na.rm = TRUE, dims =1)
highest.FC <- mean.FC[1:10]
lowest.FC <- mean.FC[13290:13299]
barplot(lowest.FC, horiz = TRUE, xlim = c(-0.3, 0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick")
View(mean.FC)
max(mean.FC)
min(mean.FC)
sorted.mean = sort(mean.FC)
View(sorted.mean)
sorted.mean = sort(mean.FC, decreasing = TRUE)
highest.FC <- sorted.mean[1:10]
lowest.FC <- sorted.mean[13290:13299]
View(highest.FC)
View(lowest.FC)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick")
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", cex.names =0.5)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), cex.names =0.5)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), line =2, cex.names =0.5)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), cex.names =0.5)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.5)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
par(mar = c(2, 2, 2, 2))
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
par(mar = c(2, 1, 5, 2))
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
par(mar = c(5, 5, 5, 5))
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.9)
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
par(mar = c(5, 5, 5, 5))
> barplot(highest.FC, horiz = TRUE, xlim = c(1,1.6), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
par(mar = c(5, 5, 5, 5))barplot(highest.FC, horiz = TRUE, xlim = c(1,1.6), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
par(mar = c(5, 5, 5, 5))
barplot(highest.FC, horiz = TRUE, xlim = c(1,1.6), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
par(mar = c(5, 5, 5, 5))
barplot(highest.FC, horiz = TRUE, xlim = c(0,1.6), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
par(mar = c(5, 5, 5, 5))
barplot(highest.FC, horiz = TRUE, xlim = c(0,2), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
par(mar = c(5, 5, 5, 5))
barplot(highest.FC, horiz = TRUE, xlim = c(0,1.8), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
#Specific Analysis
#Find Biomarker for cisplatin through FC
treated.cisplatin = treated.scaled[,c(95:149)]
untreated.cisplatin = untreated.scaled[,c(95:149)]
FC.cisplatin = log2(treated.cisplatin/untreated.cisplatin)
is.nan.data.frame.2 <- function(x)      #NaN durch 0 ersetzen
+ do.call(cbind, lapply(x, is.nan))
FC.cisplatin[is.nan(FC.cisplatin)] <- 0
FC.cisplatin = t(FC.cisplatin)
mean.FC <- colMeans(FC.cisplatin, na.rm = TRUE, dims =1)
sorted.mean = sort(mean.FC, decreasing = TRUE)
#finding/visualizing most extreme FC values for cisplatin
lowest.FC <- sorted.mean[13290:13299]
par(mar = c(5, 5, 5, 5))
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
highest.FC <- sorted.mean[1:10]
par(mar = c(5, 5, 5, 5))
barplot(highest.FC, horiz = TRUE, xlim = c(0,1.8), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
rm(is.nan.data.frame.2
rm(is.nan.data.frame.2)
library(rstudioapi)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
meta = read.delim(paste0(wd, "/NCI_TPW_metadata.tsv"), header = TRUE, sep = "\t")
untreated = readRDS(paste0(wd, "/NCI_TPW_gep_untreated.RDS"))
treated = readRDS(paste0(wd, "/NCI_TPW_gep_treated.RDS"))
ic50 = readRDS(paste0(wd, "/NegLogGI50.RDS"))
basalexp = readRDS(paste0(wd, "/CCLE_basalexpression.RDS"))
copynumber = readRDS(paste0(wd, "/CCLE_copynumber.RDS"))
mutations = readRDS(paste0(wd, "/CCLE_mutations.RDS"))
cellline = read.delim(paste0(wd, "/cellline_annotation.tsv"), header = TRUE, sep = "\t")
drug = read.delim(paste0(wd, "/drug_annotation.tsv"), header = TRUE, sep = "\t")
na.treated = apply(treated, 2, function(x) {sum(is.na(x))})
which(na.treated > 0)
na.untreated = apply(untreated, 2, function(x) {sum(is.na(x))})
which(na.untreated > 0)
na.mutations = apply(mutations, 2, function(x) {sum(is.na(x))})
which(na.mutations > 0)
na.basal=apply(basalexp, 2, function(x) {sum(is.na(x))})
which(na.basal > 0)
na.cellline=apply(cellline, 2, function(x) {sum(is.na(x))})
which(na.cellline>0)
na.copynumber=apply(copynumber, 2, function(x) {sum(is.na(x))})
which(na.copynumber > 0)
na.ic50=apply(ic50, 2, function(x) {sum(is.na(x))})
which(ic50 > 0)
na.meta=apply(meta, 2, function(x) {sum(is.na(x))})
which(na.meta >0)
mutations.removed = mutations[, -(12:13)]
#scaled, FC, PCA
basal.scaled <- scale(basalexp)
treated.scaled <- scale(treated)
untreated.scaled <- scale(untreated)
log2FC.treated.untreated <- log2(treated.scaled/untreated.scaled)
is.nan.data.frame <- function(x)      #NaN durch 0 ersetzen
do.call(cbind, lapply(x, is.nan))
log2FC.treated.untreated[is.nan(log2FC.treated.untreated)] <- 0
plot(density(log2FC.treated.untreated))
PCA.FC <- prcomp(log2FC.treated.untreated, center=F , scale.=F)
plot(PCA.FC, type ="lines")
plot(PCA.FC$rotation[, 1], PCA.FC$rotation[, 2], xlab = "PC1", ylab = "PC2")
#Specific Analysis
#Find Biomarker for cisplatin through FC
FC.cisplatin = log2FC.treated.untreated[,c(95:149)]
FC.cisplatin = t(FC.cisplatin)
mean.FC <- colMeans(FC.cisplatin, na.rm = TRUE, dims =1)
sorted.mean = sort(mean.FC, decreasing = TRUE)
#finding/visualizing most extreme FC values for cisplatin
lowest.FC <- sorted.mean[13290:13299]
par(mar = c(5, 5, 5, 5))
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
highest.FC <- sorted.mean[1:10]
par(mar = c(5, 5, 5, 5))
barplot(highest.FC, horiz = TRUE, xlim = c(0,1.8), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
#upordownregulation
upordown = upordown[,c(95:149)]
mean.upordown <- colMeans(upordown, na.rm= TRUE, dims =1)
sorted.upordown = sort(mean.upordown, decreasing = TRUE)
View(upordown)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown = upordown[,c(95:149)]
mean.upordown <- colMeans(upordown, na.rm= TRUE, dims =1)
sorted.upordown = sort(mean.upordown, decreasing = TRUE)
View(upordown)
biomarker <- rbind(lowest.FC, highest.FC)
View(biomarker)
View(highest.FC)
View(lowest.FC)
updown.biomarker = upordown[c("SUPT3H", "BBS9", "ANKRA2", "GNB1L", "KDMAC", "DDIT3", "TTC28", "NBEA", "PCCA", "PPP1R15A")]
View(uporodwn.biomarker)
updown.biomarker = upordown[c("SUPT3H", "BBS9", "ANKRA2", "GNB1L", "KDMAC", "DDIT3", "TTC28", "NBEA", "PCCA", "PPP1R15A"), ]
upordown= t(upordown)
View(upordown)
updown.biomarker = upordown[,c("SUPT3H", "BBS9", "ANKRA2", "GNB1L", "KDMAC", "DDIT3", "TTC28", "NBEA", "PCCA", "PPP1R15A")]
updown.biomarker <- upordown[,c("SUPT3H", "BBS9", "ANKRA2", "GNB1L", "KDMAC", "DDIT3", "TTC28", "NBEA", "PCCA", "PPP1R15A")]
grep(upordown, "SUPT3H")
updown.biomarker <- upordown[,c("SUPT3H", "BBS9", "ANKRA2", "GNB1L", "KDMAC", "DDIT3", "TTC28", "NBEA", "PCCA", "PPP1R15A")]
updown = as.data.fram(upordown)
updown = as.data.frame(upordown)
View(updown)
updown.biomarker <- updown[,c("SUPT3H", "BBS9", "ANKRA2", "GNB1L", "KDMAC", "DDIT3", "TTC28", "NBEA", "PCCA", "PPP1R15A")]
updown.biomarker = updown[,c("SUPT3H", "BBS9", "ANKRA2", "GNB1L", "KDMAC", "DDIT3", "TTC28", "NBEA", "PCCA", "PPP1R15A")]
greb(updown, "A1CF")
grep(updown, "A1CF")
updown.biomarker = updown[,c(1, 2, 3)]
View(updown.biomarker)
rm(updown.biomarker)
View(updown.biomarker)
grep(updown, A1CF)
grep("A1CF", colnames(updown))
grep("SUPT3H", colnames(updown))
grep("BBS9", colnames(updown))
grep("ANKRA2", colnames(updown))
grep("GNB1L", colnames(updown))
grep("KDM4C", colnames(updown))
grep("DDIT3", colnames(updown))
grep("TTC28", colnames(updown))
grep("NBEA", colnames(updown))
grep("PCCA", colnames(updown))
grep("PPP1R15A", colnames(updown))
updown.biomarker = updown[,c(11372, 1053, 503, 1347, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002)]
View(updown.biomarker)
grep("FTO", colnames(updown))
grep("PLK1", colnames(updown))
grep("VPS8", colnames(updown))
grep("POLR3B", colnames(updown))
grep("MAPKAP1", colnames(updown))
grep("STAG1", colnames(updown))
grep("TBCD", colnames(updown))
grep("C11orf49", colnames(updown))
grep("ANKS1A", colnames(updown))
grep("COMMD10", colnames(updown))
updown.biomarker = updown[,c(11372, 1053, 503, 1347, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
View(updown.biomarker)
heatmap(updown.biomarker)
rm(upordown)
upordown.biomarker = as.matrix(updown.biomarker)
heatmap(upordown.biomarker)
rm(updown)
rm(upordown.biomarker)
rm(updown.biomarker)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown = upordown[,c(95:149)]
upordown= t(upordown)
upordown.biomarker = upordown[,c(11372, 1053, 503, 1347, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
View(upordown)
View(upordown)
View(upordown.biomarker)
library(rstudioapi)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
meta = read.delim(paste0(wd, "/NCI_TPW_metadata.tsv"), header = TRUE, sep = "\t")
untreated = readRDS(paste0(wd, "/NCI_TPW_gep_untreated.RDS"))
treated = readRDS(paste0(wd, "/NCI_TPW_gep_treated.RDS"))
ic50 = readRDS(paste0(wd, "/NegLogGI50.RDS"))
basalexp = readRDS(paste0(wd, "/CCLE_basalexpression.RDS"))
copynumber = readRDS(paste0(wd, "/CCLE_copynumber.RDS"))
mutations = readRDS(paste0(wd, "/CCLE_mutations.RDS"))
cellline = read.delim(paste0(wd, "/cellline_annotation.tsv"), header = TRUE, sep = "\t")
drug = read.delim(paste0(wd, "/drug_annotation.tsv"), header = TRUE, sep = "\t")
#general overview
#colored boxplot without scaling
boxplot(treated, xlab = "treated", horizontal = F, border=cb)
#colored boxplot with scaling
boxplot(treated.scaled, xlab="treated scaled", horizontal =F, border=cb)
na.treated = apply(treated, 2, function(x) {sum(is.na(x))})
which(na.treated > 0)
na.untreated = apply(untreated, 2, function(x) {sum(is.na(x))})
which(na.untreated > 0)
na.mutations = apply(mutations, 2, function(x) {sum(is.na(x))})
which(na.mutations > 0)
na.basal=apply(basalexp, 2, function(x) {sum(is.na(x))})
which(na.basal > 0)
na.cellline=apply(cellline, 2, function(x) {sum(is.na(x))})
which(na.cellline>0)
na.copynumber=apply(copynumber, 2, function(x) {sum(is.na(x))})
which(na.copynumber > 0)
na.ic50=apply(ic50, 2, function(x) {sum(is.na(x))})
which(ic50 > 0)
na.meta=apply(meta, 2, function(x) {sum(is.na(x))})
which(na.meta >0)
mutations.removed = mutations[, -(12:13)]
#scaled, FC, PCA
basal.scaled <- scale(basalexp)
treated.scaled <- scale(treated)
untreated.scaled <- scale(untreated)
log2FC.treated.untreated <- log2(treated.scaled/untreated.scaled)
is.nan.data.frame <- function(x)      #NaN durch 0 ersetzen
do.call(cbind, lapply(x, is.nan))
log2FC.treated.untreated[is.nan(log2FC.treated.untreated)] <- 0
plot(density(log2FC.treated.untreated))
PCA.FC <- prcomp(log2FC.treated.untreated, center=F , scale.=F)
plot(PCA.FC, type ="lines")
plot(PCA.FC$rotation[, 1], PCA.FC$rotation[, 2], xlab = "PC1", ylab = "PC2")
# wie viel Varianz wird durch components erklaert?
Varianz.PCA=PCA.FC$sdev^2
# Medikamente einfaerben
chemo1 <- c(94:248)   #ueberpruefen
chemo2 <- c(307:533)  #ueberpruefen
chemo3 <- c(589:760)  #ueberpruefen
chemo <- c(chemo1, chemo2, chemo3)
FC.named <- log2FC.treated.untreated
# Medikamente einf�rben
colnames(FC.named)[chemo] <- "chemo"
color.chemo <- ifelse(colnames(FC.named)=="chemo", "firebrick","forestgreen")
plot(PCA.FC$rotation[, 1], PCA.FC$rotation[, 2], col=color.chemo, xlab = "PC1", ylab = "PC2")
#color every drug PCA
FC.color <- log2FC.treated.untreated
#creating vectors for every drug and rename the log2FC matrix
azacytidine <- c(1:39)
colnames(FC.color)[azacytidine] <- "azacytidine"
bortezomib <-c(40:94)
colnames(FC.color)[bortezomib] <- "bortezomib"
cisplatin <- c(95:150)
colnames(FC.color)[cisplatin] <- "cisplatin"
dasatinib <- c(150:198)
colnames(FC.color)[dasatinib] <- "dasatinib"
doxorubicin <- c(199:248)
colnames(FC.color)[doxorubicin] <- "doxorubicin"
erlotinib <- c(249:307)
colnames(FC.color)[erlotinib] <- "erlotinib"
geldanamycin <- c(308:364)
colnames(FC.color)[geldanamycin] <- "geldanamycin"
gemcitabine <- c(365:420)
colnames(FC.color)[gemcitabine] <- "gemcitabine"
lapatinib <- c(421:474)
colnames(FC.color)[lapatinib] <- "lapatinib"
paclitaxel <- c(475:533)
colnames(FC.color)[paclitaxel] <- "paclitaxel"
sirolimus <- c(534:589)
colnames(FC.color)[sirolimus] <- "sirolimus"
sorafenib <- c(590:646)
colnames(FC.color)[sorafenib] <- "sorafenib"
sunitinib <- c(647:702)
colnames(FC.color)[sunitinib] <- "sunitinib"
topotecan <- c(703:760)
colnames(FC.color)[topotecan] <- "topotecan"
vorinostat <- c(761:819)
colnames(FC.color)[vorinostat] <- "vorinostat"
#creating color vector
color.aza <- ifelse(colnames(FC.color[,c(1:94)])=="azacytidine", "firebrick", "forestgreen")
color.cis <- ifelse(colnames(FC.color[,c(95:198)])=="cisplatin", "blue","orange")
color.dox <- ifelse(colnames(FC.color[,c(199:307)])=="doxorubicin", "black", "lightblue")
color.gel <- ifelse(colnames(FC.color[,c(308:420)])=="geldanamycin", "pink", "violet")
color.lap <- ifelse(colnames(FC.color[,c(421:533)])=="lapatinib", "grey", "lightgreen")
color.sir<- ifelse(colnames(FC.color[,c(534:646)])=="sirolimus", "darkblue", "gold")
color.sun <- ifelse(colnames(FC.color[,c(647:760)])=="sunitinib", "yellow", "red")
color.vor <- ifelse(colnames(FC.color[,c(761:819)])=="vorinostat", "peru", "silver")
cb <- c(color.aza, color.cis, color.dox, color.gel, color.lap, color.sir, color.sun, color.vor)
#plot colored PCA
plot(PCA.FC$rotation[, 1], PCA.FC$rotation[, 2], col=cb, xlab = "PC1", ylab = "PC2", pch=19)
plot(PCA.FC$rotation[, 3], PCA.FC$rotation[, 4], col=cb, xlab = "PC3", ylab = "PC4", pch=19)
#color tyrosine kinase inhibitor
FC.TKI <- log2FC.treated.untreated
tyrosinKI <- c(dasatinib, sunitinib, lapatinib, sorafenib)
colnames(FC.TKI)[tyrosinKI]<- "Tyrosine Kinase Inhibitor"
color.TKI <- ifelse(colnames(FC.TKI)=="Tyrosine Kinase Inhibitor", "firebrick", "forestgreen")
#plot
plot(PCA.FC$rotation[,1], PCA.FC$rotation[,2], col=color.TKI, xlab="PC1", ylab="PC2", pch=19)
plot(PCA.FC$rotation[,3], PCA.FC$rotation[,4], col=color.TKI, xlab="PC3", ylab="PC4", pch=19)
#Specific Analysis
#Find Biomarker for cisplatin through FC
FC.cisplatin = log2FC.treated.untreated[,c(95:149)]
FC.cisplatin = t(FC.cisplatin)
mean.FC <- colMeans(FC.cisplatin, na.rm = TRUE, dims =1)
sorted.mean = sort(mean.FC, decreasing = TRUE)
#finding/visualizing most extreme FC values for cisplatin
lowest.FC <- sorted.mean[13290:13299]
par(mar = c(5, 5, 5, 5))
barplot(lowest.FC, horiz = TRUE, xlim = c(-1.3,0), main= "lowest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "firebrick", names.arg=c("FTO", "PLK1", "VPS8", "POLR38", "MAPKAP1", "STAG1", "TBCD", "C11orf49","ANKS1A", "COMMD10"), las=1, cex.names =0.8)
highest.FC <- sorted.mean[1:10]
par(mar = c(5, 5, 5, 5))
barplot(highest.FC, horiz = TRUE, xlim = c(0,1.8), main= "highest log2 FC-values for cisplatin", xlab= "mean log2FC values in different celllines", col= "lightgreen",las=1, cex.names =0.8)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown= t(upordown)
upordown = upordown[,c(95:149)]
upordown.biomarker = upordown[,c(11372, 1053, 503, 1347, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
heatmap(upordown.biomarker)
cb <- c(color.aza, color.cis, color.dox, color.gel, color.lap, color.sir, color.sun, color.vor)
#general overview
#colored boxplot without scaling
boxplot(treated, xlab = "treated", horizontal = F, border=cb)
#colored boxplot with scaling
boxplot(treated.scaled, xlab="treated scaled", horizontal =F, border=cb)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown= t(upordown)
upordown = upordown[,c(95:149)]
upordown.biomarker = upordown[,c(11372, 1053, 503, 1347, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
upordown.biomarker = t(upordown.biomarker)
heatmap(upordown.biomarker)
View(highest.FC)
upordown = (treated.scaled/untreated.scaled)
upordown= t(upordown)
upordown = upordown[,c(95:149)]
upordown.biomarker = upordown[,c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
upordown.biomarker = t(upordown.biomarker)
View(upordown)
upordown = (treated.scaled/untreated.scaled)
upordown= t(upordown)
upordown = upordown[,c(95:149)]
upordown.biomarker = upordown[,c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
upordown.biomarker = t(upordown.biomarker)
View(lowest.FC)
upordown.biomarker <- upordown[,c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
upordown.biomarker = t(upordown.biomarker)
View(upordown.biomarker)
upordown.biomarker <- upordown[,c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
upordown = (treated.scaled/untreated.scaled)
upordown= t(upordown)
upordown = upordown[,c(95:149)]
View(upordown)
upordown = (treated.scaled/untreated.scaled)
upordown = upordown[,c(95:149)]
View(upordown)
upordown.biomarker = upordown[,c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
rm(upordown.biomarker)
View(upordown)
rm(upordown)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown = upordown[,c(95:149)]
upordown = t(upordown)
upordown.biomarker = upordown[ , c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
upordown.biomarker = t(upordown.biomarker)
heatmap(upordown.biomarker)
View(upordown)
View(upordown.biomarker)
rm(upordown.biomarker)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown = upordown[,c(95:149)]
upordown = t(upordown)
upordown.biomarker = upordown[ , c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 7538, 7539, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
View(upordown.biomarker)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown = upordown[,c(95:149)]
upordown = t(upordown)
upordown.biomarker = upordown[ , c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 6344, 11536, 1261, 525, 2332)]
View(upordown.biomarker)
upordown.biomarker = upordown[ , c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 11536, 1261, 525, 2332)]
View(upordown.biomarker)
#upordownregulation
upordown = (treated.scaled/untreated.scaled)
upordown = upordown[,c(95:149)]
upordown = t(upordown)
upordown.biomarker = upordown[ , c(11372, 1053, 503, 4403, 5711, 2819, 12310, 7537, 8326, 9002, 4060, 8765, 12703, 8892, 6729, 11254, 11536, 1261, 525, 2332)]
upordown.biomarker = t(upordown.biomarker)
heatmap(upordown.biomarker)
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
biomarker = cbind(highest.FC, lowest.FC)
View(biomarker)
rm(biomarker)
biomarker = rbind(highest.FC, lowest.FC)
View(biomarker)
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col = coul, scale="column", margins=c(5,10))
col = cm.colors
View(ccm.colors
View(cm.colors)
View(cm.colors)
rm(cm.colors)
# Install
install.packages("wesanderson")
# Load
library(wesanderson)
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col = Zissou , scale="column", margins=c(5,10))
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col=wes.palette(n=3, name="GrandBudapest" , scale="column", margins=c(5,10))
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col=wes.palette(n=3, name="GrandBudapest") , scale="column", margins=c(5,10))
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col=wes_palette(n=3, name="GrandBudapest") , scale="column", margins=c(5,10))
?wes_palette
color <- wes_palette(5, name = "Zissou1", type = "discrete")
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col=color, scale="column", margins=c(5,10))
color <- wes_palette(10, name = "Zissou", type = "discrete")
color <- wes_palette(10, name = "Royal1", type = "discrete")
color <- wes_palette(5, name = "Royal1", type = "discrete")
color <- wes_palette(5, name = "Moonrise1", type = "discrete")
color <- wes_palette(5, name = "Zissou1", type = "discrete")
color <- wes_palette(5, name = "Zissou1", type = "continuous")
heatmap(upordown.biomarker, Rowv=NA, Colv=NA, col=color, scale="column", margins=c(5,10))
